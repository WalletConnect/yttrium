name: CI

on:
  pull_request:
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  build_rust_and_test:
    name: Rust project - latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      - run: rustup update stable && rustup default stable
      - run: rustup toolchain install nightly -c rustfmt
      - run: cargo install cargo-udeps
      - run: git submodule update --init --recursive
      - run: make setup-thirdparty
      - run: docker compose up -d
        working-directory: test/scripts/forked_state
      - run: while ! curl localhost:8545/health; do sleep 1; done
      - run: while ! curl localhost:4337/health; do sleep 1; done
      - run: while ! curl localhost:3000/ping; do sleep 1; done
      - run: cargo build --workspace --all-features --all-targets
      - run: cargo test --all-features --lib --bins
      # - run: cargo clippy --workspace --all-features --all-targets -- -D warnings
      # - run: cargo +nightly fmt --all -- --check
      - run: cargo +nightly udeps --workspace

  build_wasm:
    name: Build on WASM
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      - run: rustup update stable && rustup default stable
      - run: rustup target add wasm32-unknown-unknown
      - run: git submodule update --init --recursive
      - run: make setup-thirdparty
      - run: cargo build --workspace --all-features --lib --bins --target wasm32-unknown-unknown --exclude=ffi

  build_swift_and_test:
    name: Swift Package - latest
    runs-on: macos-14
    strategy:
      matrix:
        config:
          - debug
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      - run: rustup update stable && rustup default stable
      - run: git submodule update --init --recursive
      - run: make setup-thirdparty
      - run: make build-ios-bindings
      - name: Select Xcode 15.4
        run: sudo xcode-select -s /Applications/Xcode_15.4.app
      - name: Build ${{ matrix.config }}
        run: make CONFIG=${{ matrix.config }} build-swift-apple-platforms
      - name: Run ${{ matrix.config }} tests
        run: make CONFIG=${{ matrix.config }} test-swift-apple-platforms
